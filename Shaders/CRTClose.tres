[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=12]
code = "// From: https://www.shadertoy.com/view/XlSczy

shader_type canvas_item;

uniform float time = 0.0;

uniform vec4 FADE_COLOR = vec4(0.0859f, 0.0937f, 0.1328f, 1.0f);
const float BUFFER = 2.0f;
const float SCALE_SPEED = 1.5f;

void fragment()
{
	vec2 screenSize = 1.0 / SCREEN_PIXEL_SIZE;
    float onePixelScale = (screenSize.y - 1.0f) / screenSize.y;
    
    float time_changed = mod(time * 4.0f, 1.0f / SCALE_SPEED + 1.0f + BUFFER * 2.0f);
    time_changed = clamp(time_changed- BUFFER, 0.0, 1.0f / SCALE_SPEED + 1.0f);
    
    float scaleTime = clamp(time_changed * SCALE_SPEED, 0.0f, onePixelScale);
    float fadeTime = clamp(time_changed - onePixelScale / SCALE_SPEED, 0.0f, 1.0f);
        
	vec2 uv = FRAGCOORD.xy / screenSize;
    vec2 scaledUV = vec2(
        (uv.x - 0.5f) * (1.0f - scaleTime) + 0.5f,
        (uv.y - 0.5f) / (1.0f - scaleTime) + 0.5f
    );
    
	vec4 textureColor = texture(SCREEN_TEXTURE, scaledUV) + vec4(scaleTime, scaleTime, scaleTime, 0);
    float fadeOutLevel = 1.0f - fadeTime;
    float cropPixel = min(
        clamp(
            sign(
                abs(scaleTime / 2.0f - 0.5) 
                - abs(uv.y - 0.5f)
            )
            , 0.0f, 1.0f
        ), 
        clamp(
            sign(
                1.0f - fadeTime
                - abs(uv.x - 0.5f)
            ),
            0.0f, 
            1.0f
        )
    );
    
    COLOR = mix(
        FADE_COLOR, 
        mix(FADE_COLOR, textureColor, fadeOutLevel), 
        cropPixel
    );
}"

[resource]
shader = SubResource( 12 )
shader_param/time = 1.0
shader_param/FADE_COLOR = Plane( 0, 0, 0, 1 )
